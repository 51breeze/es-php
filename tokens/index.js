const modules = new Map();
modules.set("AnnotationDeclaration",require('./AnnotationDeclaration.js'));
modules.set("AnnotationExpression",require('./AnnotationExpression.js'));
modules.set("ArrayExpression",require('./ArrayExpression.js'));
modules.set("ArrayPattern",require('./ArrayPattern.js'));
modules.set("ArrowFunctionExpression",require('./ArrowFunctionExpression.js'));
modules.set("AssignmentExpression",require('./AssignmentExpression.js'));
modules.set("AssignmentPattern",require('./AssignmentPattern.js'));
modules.set("AwaitExpression",require('./AwaitExpression.js'));
modules.set("BinaryExpression",require('./BinaryExpression.js'));
modules.set("BlockStatement",require('./BlockStatement.js'));
modules.set("BreakStatement",require('./BreakStatement.js'));
modules.set("CallExpression",require('./CallExpression.js'));
modules.set("ChainExpression",require('./ChainExpression.js'));
modules.set("ClassDeclaration",require('./ClassDeclaration.js'));
modules.set("ConditionalExpression",require('./ConditionalExpression.js'));
modules.set("ContinueStatement",require('./ContinueStatement.js'));
modules.set("Declarator",require('./Declarator.js'));
modules.set("DeclaratorDeclaration",require('./DeclaratorDeclaration.js'));
modules.set("DoWhileStatement",require('./DoWhileStatement.js'));
modules.set("EmptyStatement",require('./EmptyStatement.js'));
modules.set("EnumDeclaration",require('./EnumDeclaration.js'));
modules.set("EnumProperty",require('./EnumProperty.js'));
modules.set("ExportAllDeclaration",require('./ExportAllDeclaration.js'));
modules.set("ExportAssignmentDeclaration",require('./ExportAssignmentDeclaration.js'));
modules.set("ExportDefaultDeclaration",require('./ExportDefaultDeclaration.js'));
modules.set("ExportNamedDeclaration",require('./ExportNamedDeclaration.js'));
modules.set("ExportSpecifier",require('./ExportSpecifier.js'));
modules.set("ExpressionStatement",require('./ExpressionStatement.js'));
modules.set("ForInStatement",require('./ForInStatement.js'));
modules.set("ForOfStatement",require('./ForOfStatement.js'));
modules.set("ForStatement",require('./ForStatement.js'));
modules.set("FunctionDeclaration",require('./FunctionDeclaration.js'));
modules.set("FunctionExpression",require('./FunctionExpression.js'));
modules.set("Identifier",require('./Identifier.js'));
modules.set("IfStatement",require('./IfStatement.js'));
modules.set("ImportDeclaration",require('./ImportDeclaration.js'));
modules.set("ImportDefaultSpecifier",require('./ImportDefaultSpecifier.js'));
modules.set("ImportExpression",require('./ImportExpression.js'));
modules.set("ImportNamespaceSpecifier",require('./ImportNamespaceSpecifier.js'));
modules.set("ImportSpecifier",require('./ImportSpecifier.js'));
modules.set("InterfaceDeclaration",require('./InterfaceDeclaration.js'));
modules.set("JSXAttribute",require('./JSXAttribute.js'));
modules.set("JSXCdata",require('./JSXCdata.js'));
modules.set("JSXClosingElement",require('./JSXClosingElement.js'));
modules.set("JSXClosingFragment",require('./JSXClosingFragment.js'));
modules.set("JSXElement",require('./JSXElement.js'));
modules.set("JSXEmptyExpression",require('./JSXEmptyExpression.js'));
modules.set("JSXExpressionContainer",require('./JSXExpressionContainer.js'));
modules.set("JSXFragment",require('./JSXFragment.js'));
modules.set("JSXIdentifier",require('./JSXIdentifier.js'));
modules.set("JSXMemberExpression",require('./JSXMemberExpression.js'));
modules.set("JSXNamespacedName",require('./JSXNamespacedName.js'));
modules.set("JSXOpeningElement",require('./JSXOpeningElement.js'));
modules.set("JSXOpeningFragment",require('./JSXOpeningFragment.js'));
modules.set("JSXScript",require('./JSXScript.js'));
modules.set("JSXSpreadAttribute",require('./JSXSpreadAttribute.js'));
modules.set("JSXStyle",require('./JSXStyle.js'));
modules.set("JSXText",require('./JSXText.js'));
modules.set("LabeledStatement",require('./LabeledStatement.js'));
modules.set("Literal",require('./Literal.js'));
modules.set("LogicalExpression",require('./LogicalExpression.js'));
modules.set("MemberExpression",require('./MemberExpression.js'));
modules.set("MethodDefinition",require('./MethodDefinition.js'));
modules.set("MethodGetterDefinition",require('./MethodGetterDefinition.js'));
modules.set("MethodSetterDefinition",require('./MethodSetterDefinition.js'));
modules.set("NewExpression",require('./NewExpression.js'));
modules.set("ObjectExpression",require('./ObjectExpression.js'));
modules.set("ObjectPattern",require('./ObjectPattern.js'));
modules.set("PackageDeclaration",require('./PackageDeclaration.js'));
modules.set("ParenthesizedExpression",require('./ParenthesizedExpression.js'));
modules.set("Program",require('./Program.js'));
modules.set("Property",require('./Property.js'));
modules.set("PropertyDefinition",require('./PropertyDefinition.js'));
modules.set("RestElement",require('./RestElement.js'));
modules.set("ReturnStatement",require('./ReturnStatement.js'));
modules.set("SequenceExpression",require('./SequenceExpression.js'));
modules.set("SpreadElement",require('./SpreadElement.js'));
modules.set("StructTableColumnDefinition",require('./StructTableColumnDefinition.js'));
modules.set("StructTableDeclaration",require('./StructTableDeclaration.js'));
modules.set("StructTableKeyDefinition",require('./StructTableKeyDefinition.js'));
modules.set("StructTableMethodDefinition",require('./StructTableMethodDefinition.js'));
modules.set("StructTablePropertyDefinition",require('./StructTablePropertyDefinition.js'));
modules.set("SuperExpression",require('./SuperExpression.js'));
modules.set("SwitchCase",require('./SwitchCase.js'));
modules.set("SwitchStatement",require('./SwitchStatement.js'));
modules.set("TemplateElement",require('./TemplateElement.js'));
modules.set("TemplateLiteral",require('./TemplateLiteral.js'));
modules.set("ThisExpression",require('./ThisExpression.js'));
modules.set("ThrowStatement",require('./ThrowStatement.js'));
modules.set("TryStatement",require('./TryStatement.js'));
modules.set("TypeAssertExpression",require('./TypeAssertExpression.js'));
modules.set("TypeTransformExpression",require('./TypeTransformExpression.js'));
modules.set("UnaryExpression",require('./UnaryExpression.js'));
modules.set("UpdateExpression",require('./UpdateExpression.js'));
modules.set("VariableDeclaration",require('./VariableDeclaration.js'));
modules.set("VariableDeclarator",require('./VariableDeclarator.js'));
modules.set("WhenStatement",require('./WhenStatement.js'));
modules.set("WhileStatement",require('./WhileStatement.js'));
module.exports=modules;